<?xml version="1.0" ?> 
<top id="1" addr="b771a9e8" >
    <attributelist id="2" addr="b771a9e8" >
        <attribute name="outfile" value="interfaces/libvlc_media_discoverer_wrap.c" id="3" addr="b7724298" />
        <attribute name="name" value="vlc" id="4" addr="b7724298" />
        <attribute name="module" value="vlc" id="5" addr="b7723268" />
        <attribute name="inputfile" value="interfaces/libvlc_media_discoverer.i" id="6" addr="b7724298" />
        <attribute name="classes" value="b7723e78" id="7" addr="b7723e78" />
        <attribute name="infile" value="interfaces/libvlc_media_discoverer.i" id="8" addr="b7724298" />
        <attribute name="outfile_h" value="interfaces/libvlc_media_discoverer_wrap.h" id="9" addr="b7724298" />
    </attributelist >

    <include id="10" addr="b7721f88" >
        <attributelist id="11" addr="b7721f88" >
            <attribute name="name" value="/usr/share/swig1.3//swig.swg" id="12" addr="b7724298" />
        </attributelist >

        <include id="13" addr="b7721fb8" >
            <attributelist id="14" addr="b7721fb8" >
                <attribute name="name" value="/usr/share/swig1.3//swigwarnings.swg" id="15" addr="b7724298" />
            </attributelist >

            <include id="16" addr="b7722088" >
                <attributelist id="17" addr="b7722088" >
                    <attribute name="name" value="/usr/share/swig1.3//swigwarn.swg" id="18" addr="b7724298" />
                </attributelist >
             
            </include >
        </include >
        <typemap id="19" addr="b77222d8" >
            <attributelist id="20" addr="b77222d8" >
                <attribute name="code" value="free($1);" id="21" addr="b7724298" />
                <attribute name="method" value="newfree" id="22" addr="b7724298" />
            </attributelist >

            <typemapitem id="23" addr="b7722248" >
                <attributelist id="24" addr="b7722248" >
                    <parmlist id="25" addr="b7722268" >
                        <parm id="26">
                            <attributelist id="27" addr="b7722268" >
                                <attribute name="type" value="p.char" id="28" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="29" addr="b77223e8" >
            <attributelist id="30" addr="b77223e8" >
                <attribute name="code" value="{&#10;  if ($1) free((char *)$1);&#10;  if ($input) {&#10;     $1 = ($1_type) malloc(strlen((const char *)$input)+1);&#10;     strcpy((char *)$1, (const char *)$input);&#10;  } else {&#10;     $1 = 0;&#10;  }&#10;}" id="31" addr="b7724298" />
                <attribute name="method" value="memberin" id="32" addr="b7724298" />
            </attributelist >

            <typemapitem id="33" addr="b7722388" >
                <attributelist id="34" addr="b7722388" >
                    <parmlist id="35" addr="b77223a8" >
                        <parm id="36">
                            <attributelist id="37" addr="b77223a8" >
                                <attribute name="type" value="p.char" id="38" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="39" addr="b7722518" >
            <attributelist id="40" addr="b7722518" >
                <kwargs id="41" addr="b7722418" >
                    <attributelist id="42" addr="b7722418" >
                        <attribute name="name" value="warning" id="43" addr="b7724298" />
                        <attribute name="value" value="451:Setting a const char * variable may leak memory." id="44" addr="b7724298" />
                    </attributelist >
                    <kwargssitem id="45" addr="b7722428" >
                        <attributelist id="46" addr="b7722428" >
                        </attributelist >
                    </kwargssitem >
                    <kwargssitem id="47" addr="b7722448" >
                        <attributelist id="48" addr="b7722448" >
                        </attributelist >
                    </kwargssitem >
                </kwargs >
                <attribute name="code" value="{&#10;  if ($input) {&#10;     $1 = ($1_type) malloc(strlen((const char *)$input)+1);&#10;     strcpy((char *)$1, (const char *)$input);&#10;  } else {&#10;     $1 = 0;&#10;  }&#10;}" id="49" addr="b7724298" />
                <attribute name="method" value="memberin" id="50" addr="b7724298" />
            </attributelist >

            <typemapitem id="51" addr="b77224b8" >
                <attributelist id="52" addr="b77224b8" >
                    <parmlist id="53" addr="b77224d8" >
                        <parm id="54">
                            <attributelist id="55" addr="b77224d8" >
                                <attribute name="type" value="p.q(const).char" id="56" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="57" addr="b7722608" >
            <attributelist id="58" addr="b7722608" >
                <attribute name="code" value="{&#10;  if ($1) free((char *)$1);&#10;  if ($input) {&#10;     $1 = ($1_type) malloc(strlen((const char *)$input)+1);&#10;     strcpy((char *)$1, (const char *)$input);&#10;  } else {&#10;     $1 = 0;&#10;  }&#10;}" id="59" addr="b7724298" />
                <attribute name="method" value="globalin" id="60" addr="b7724298" />
            </attributelist >

            <typemapitem id="61" addr="b77225a8" >
                <attributelist id="62" addr="b77225a8" >
                    <parmlist id="63" addr="b77225c8" >
                        <parm id="64">
                            <attributelist id="65" addr="b77225c8" >
                                <attribute name="type" value="p.char" id="66" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="67" addr="b7722728" >
            <attributelist id="68" addr="b7722728" >
                <kwargs id="69" addr="b7722638" >
                    <attributelist id="70" addr="b7722638" >
                        <attribute name="name" value="warning" id="71" addr="b7724298" />
                        <attribute name="value" value="451:Setting a const char * variable may leak memory." id="72" addr="b7724298" />
                    </attributelist >
                    <kwargssitem id="73" addr="b7722648" >
                        <attributelist id="74" addr="b7722648" >
                        </attributelist >
                    </kwargssitem >
                    <kwargssitem id="75" addr="b7722658" >
                        <attributelist id="76" addr="b7722658" >
                        </attributelist >
                    </kwargssitem >
                </kwargs >
                <attribute name="code" value="{&#10;  if ($input) {&#10;     $1 = ($1_type) malloc(strlen((const char *)$input)+1);&#10;     strcpy((char *)$1, (const char *)$input);&#10;  } else {&#10;     $1 = 0;&#10;  }&#10;}" id="77" addr="b7724298" />
                <attribute name="method" value="globalin" id="78" addr="b7724298" />
            </attributelist >

            <typemapitem id="79" addr="b77226c8" >
                <attributelist id="80" addr="b77226c8" >
                    <parmlist id="81" addr="b77226e8" >
                        <parm id="82">
                            <attributelist id="83" addr="b77226e8" >
                                <attribute name="type" value="p.q(const).char" id="84" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="85" addr="b7722838" >
            <attributelist id="86" addr="b7722838" >
                <attribute name="code" value="{&#10;  if($input) {&#10;    strncpy((char*)$1, (const char *)$input, $1_dim0-1);&#10;    $1[$1_dim0-1] = 0;&#10;  } else {&#10;    $1[0] = 0;&#10;  }&#10;}" id="87" addr="b7724298" />
                <attribute name="method" value="memberin" id="88" addr="b7724298" />
            </attributelist >

            <typemapitem id="89" addr="b77227d8" >
                <attributelist id="90" addr="b77227d8" >
                    <parmlist id="91" addr="b77227f8" >
                        <parm id="92">
                            <attributelist id="93" addr="b77227f8" >
                                <attribute name="type" value="a(ANY).char" id="94" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="95" addr="b7722938" >
            <attributelist id="96" addr="b7722938" >
                <attribute name="code" value="{&#10;  if($input) {&#10;    strncpy((char*)$1, (const char *)$input, $1_dim0-1);&#10;    $1[$1_dim0-1] = 0;&#10;  } else {&#10;    $1[0] = 0;&#10;  }&#10;}" id="97" addr="b7724298" />
                <attribute name="method" value="globalin" id="98" addr="b7724298" />
            </attributelist >

            <typemapitem id="99" addr="b77228d8" >
                <attributelist id="100" addr="b77228d8" >
                    <parmlist id="101" addr="b77228f8" >
                        <parm id="102">
                            <attributelist id="103" addr="b77228f8" >
                                <attribute name="type" value="a(ANY).char" id="104" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="105" addr="b7722a18" >
            <attributelist id="106" addr="b7722a18" >
                <attribute name="code" value="{&#10;  if ($input) strcpy((char *)$1, (const char *)$input);&#10;  else $1[0] = 0;&#10;}" id="107" addr="b7724298" />
                <attribute name="method" value="memberin" id="108" addr="b7724298" />
            </attributelist >

            <typemapitem id="109" addr="b77229b8" >
                <attributelist id="110" addr="b77229b8" >
                    <parmlist id="111" addr="b77229d8" >
                        <parm id="112">
                            <attributelist id="113" addr="b77229d8" >
                                <attribute name="type" value="a().char" id="114" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="115" addr="b7722af8" >
            <attributelist id="116" addr="b7722af8" >
                <attribute name="code" value="{&#10;  if ($input) strcpy((char *)$1, (const char *)$input);&#10;  else $1[0] = 0;&#10;}" id="117" addr="b7724298" />
                <attribute name="method" value="globalin" id="118" addr="b7724298" />
            </attributelist >

            <typemapitem id="119" addr="b7722a98" >
                <attributelist id="120" addr="b7722a98" >
                    <parmlist id="121" addr="b7722ab8" >
                        <parm id="122">
                            <attributelist id="123" addr="b7722ab8" >
                                <attribute name="type" value="a().char" id="124" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="125" addr="b7722bf8" >
            <attributelist id="126" addr="b7722bf8" >
                <attribute name="code" value="{&#10;  size_t ii;&#10;  $1_basetype *b = ($1_basetype *) $1;&#10;  for (ii = 0; ii &lt; (size_t)$1_size; ii++) b[ii] = *(($1_basetype *) $input + ii);&#10;}" id="127" addr="b7724298" />
                <attribute name="method" value="memberin" id="128" addr="b7724298" />
            </attributelist >

            <typemapitem id="129" addr="b7722b98" >
                <attributelist id="130" addr="b7722b98" >
                    <parmlist id="131" addr="b7722bb8" >
                        <parm id="132">
                            <attributelist id="133" addr="b7722bb8" >
                                <attribute name="type" value="a(ANY).SWIGTYPE" id="134" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="135" addr="b7722cf8" >
            <attributelist id="136" addr="b7722cf8" >
                <attribute name="code" value="{&#10;  size_t ii;&#10;  $1_basetype *b = ($1_basetype *) $1;&#10;  for (ii = 0; ii &lt; (size_t)$1_size; ii++) b[ii] = *(($1_basetype *) $input + ii);&#10;}" id="137" addr="b7724298" />
                <attribute name="method" value="globalin" id="138" addr="b7724298" />
            </attributelist >

            <typemapitem id="139" addr="b7722c98" >
                <attributelist id="140" addr="b7722c98" >
                    <parmlist id="141" addr="b7722cb8" >
                        <parm id="142">
                            <attributelist id="143" addr="b7722cb8" >
                                <attribute name="type" value="a(ANY).SWIGTYPE" id="144" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="145" addr="b7722e18" >
            <attributelist id="146" addr="b7722e18" >
                <attribute name="code" value="{&#10;  $basetype (*inp)[$1_dim1] = ($basetype (*)[$1_dim1])($input);&#10;  $basetype (*dest)[$1_dim1] = ($basetype (*)[$1_dim1])($1);&#10;  size_t ii = 0;&#10;  for (; ii &lt; $1_dim0; ++ii) {&#10;    $basetype *ip = inp[ii];&#10;    $basetype *dp = dest[ii];&#10;    size_t jj = 0;&#10;    for (; jj &lt; $1_dim1; ++jj) dp[jj] = ip[jj];&#10;  }&#10;}" id="147" addr="b7724298" />
                <attribute name="method" value="memberin" id="148" addr="b7724298" />
            </attributelist >

            <typemapitem id="149" addr="b7722d88" >
                <attributelist id="150" addr="b7722d88" >
                    <parmlist id="151" addr="b7722dd8" >
                        <parm id="152">
                            <attributelist id="153" addr="b7722dd8" >
                                <attribute name="type" value="a(ANY).a(ANY).SWIGTYPE" id="154" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="155" addr="b7722f38" >
            <attributelist id="156" addr="b7722f38" >
                <attribute name="code" value="{&#10;  $basetype (*inp)[$1_dim1] = ($basetype (*)[$1_dim1])($input);&#10;  $basetype (*dest)[$1_dim1] = ($basetype (*)[$1_dim1])($1);&#10;  size_t ii = 0;&#10;  for (; ii &lt; $1_dim0; ++ii) {&#10;    $basetype *ip = inp[ii];&#10;    $basetype *dp = dest[ii];&#10;    size_t jj = 0;&#10;    for (; jj &lt; $1_dim1; ++jj) dp[jj] = ip[jj];&#10;  }&#10;}" id="157" addr="b7724298" />
                <attribute name="method" value="globalin" id="158" addr="b7724298" />
            </attributelist >

            <typemapitem id="159" addr="b7722ea8" >
                <attributelist id="160" addr="b7722ea8" >
                    <parmlist id="161" addr="b7722ef8" >
                        <parm id="162">
                            <attributelist id="163" addr="b7722ef8" >
                                <attribute name="type" value="a(ANY).a(ANY).SWIGTYPE" id="164" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <typemap id="165" addr="b7723138" >
            <attributelist id="166" addr="b7723138" >
                <kwargs id="167" addr="b7722f78" >
                    <attributelist id="168" addr="b7722f78" >
                        <attribute name="name" value="numinputs" id="169" addr="b7724298" />
                        <attribute name="value" value="0" id="170" addr="b7724298" />
                    </attributelist >
                    <kwargssitem id="171" addr="b7722f88" >
                        <attributelist id="172" addr="b7722f88" >
                        </attributelist >
                    </kwargssitem >
                    <kwargssitem id="173" addr="b7722f98" >
                        <attributelist id="174" addr="b7722f98" >
                        </attributelist >
                    </kwargssitem >
                </kwargs >
                <attribute name="code" value="" id="175" addr="b7724298" />
                <attribute name="method" value="in" id="176" addr="b7724298" />
            </attributelist >

            <typemapitem id="177" addr="b7723018" >
                <attributelist id="178" addr="b7723018" >
                    <parmlist id="179" addr="b7723038" >
                        <parm id="180">
                            <attributelist id="181" addr="b7723038" >
                                <attribute name="name" value="VARARGS_SENTINEL" id="182" addr="b7724298" />
                                <attribute name="type" value="p.SWIGTYPE" id="183" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
            <typemapitem id="184" addr="b77230c8" >
                <attributelist id="185" addr="b77230c8" >
                    <parmlist id="186" addr="b77230e8" >
                        <parm id="187">
                            <attributelist id="188" addr="b77230e8" >
                                <attribute name="name" value="VARARGS_SENTINEL" id="189" addr="b7724298" />
                                <attribute name="type" value="SWIGTYPE" id="190" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                </attributelist >
             
            </typemapitem >
        </typemap >
        <insert id="191" addr="b7723178" >
            <attributelist id="192" addr="b7723178" >
                <attribute name="code" value="/* -----------------------------------------------------------------------------&#10; *  This section contains generic SWIG labels for method/variable&#10; *  declarations/attributes, and other compiler dependent labels.&#10; * ----------------------------------------------------------------------------- */&#10;&#10;/* template workaround for compilers that cannot correctly implement the C++ standard */&#10;#ifndef SWIGTEMPLATEDISAMBIGUATOR&#10;# if defined(__SUNPRO_CC) &amp;&amp; (__SUNPRO_CC &lt;= 0x560)&#10;#  define SWIGTEMPLATEDISAMBIGUATOR template&#10;# elif defined(__HP_aCC)&#10;/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */&#10;/* If we find a maximum version that requires this, the test would be __HP_aCC &lt;= 35500 for A.03.55 */&#10;#  define SWIGTEMPLATEDISAMBIGUATOR template&#10;# else&#10;#  define SWIGTEMPLATEDISAMBIGUATOR&#10;# endif&#10;#endif&#10;&#10;/* inline attribute */&#10;#ifndef SWIGINLINE&#10;# if defined(__cplusplus) || (defined(__GNUC__) &amp;&amp; !defined(__STRICT_ANSI__))&#10;#   define SWIGINLINE inline&#10;# else&#10;#   define SWIGINLINE&#10;# endif&#10;#endif&#10;&#10;/* attribute recognised by some compilers to avoid 'unused' warnings */&#10;#ifndef SWIGUNUSED&#10;# if defined(__GNUC__)&#10;#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 &amp;&amp; __GNUC_MINOR__ >= 4))&#10;#     define SWIGUNUSED __attribute__ ((__unused__)) &#10;#   else&#10;#     define SWIGUNUSED&#10;#   endif&#10;# elif defined(__ICC)&#10;#   define SWIGUNUSED __attribute__ ((__unused__)) &#10;# else&#10;#   define SWIGUNUSED &#10;# endif&#10;#endif&#10;&#10;#ifndef SWIG_MSC_UNSUPPRESS_4505&#10;# if defined(_MSC_VER)&#10;#   pragma warning(disable : 4505) /* unreferenced local function has been removed */&#10;# endif &#10;#endif&#10;&#10;#ifndef SWIGUNUSEDPARM&#10;# ifdef __cplusplus&#10;#   define SWIGUNUSEDPARM(p)&#10;# else&#10;#   define SWIGUNUSEDPARM(p) p SWIGUNUSED &#10;# endif&#10;#endif&#10;&#10;/* internal SWIG method */&#10;#ifndef SWIGINTERN&#10;# define SWIGINTERN static SWIGUNUSED&#10;#endif&#10;&#10;/* internal inline SWIG method */&#10;#ifndef SWIGINTERNINLINE&#10;# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE&#10;#endif&#10;&#10;/* exporting methods */&#10;#if (__GNUC__ >= 4) || (__GNUC__ == 3 &amp;&amp; __GNUC_MINOR__ >= 4)&#10;#  ifndef GCC_HASCLASSVISIBILITY&#10;#    define GCC_HASCLASSVISIBILITY&#10;#  endif&#10;#endif&#10;&#10;#ifndef SWIGEXPORT&#10;# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)&#10;#   if defined(STATIC_LINKED)&#10;#     define SWIGEXPORT&#10;#   else&#10;#     define SWIGEXPORT __declspec(dllexport)&#10;#   endif&#10;# else&#10;#   if defined(__GNUC__) &amp;&amp; defined(GCC_HASCLASSVISIBILITY)&#10;#     define SWIGEXPORT __attribute__ ((visibility(&quot;default&quot;)))&#10;#   else&#10;#     define SWIGEXPORT&#10;#   endif&#10;# endif&#10;#endif&#10;&#10;/* calling conventions for Windows */&#10;#ifndef SWIGSTDCALL&#10;# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)&#10;#   define SWIGSTDCALL __stdcall&#10;# else&#10;#   define SWIGSTDCALL&#10;# endif &#10;#endif&#10;&#10;/* Deal with Microsoft's attempt at deprecating C standard runtime functions */&#10;#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) &amp;&amp; defined(_MSC_VER) &amp;&amp; !defined(_CRT_SECURE_NO_DEPRECATE)&#10;# define _CRT_SECURE_NO_DEPRECATE&#10;#endif&#10;&#10;/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */&#10;#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) &amp;&amp; defined(_MSC_VER) &amp;&amp; !defined(_SCL_SECURE_NO_DEPRECATE)&#10;# define _SCL_SECURE_NO_DEPRECATE&#10;#endif&#10;&#10;" id="193" addr="b7724298" />
                <attribute name="section" value="runtime" id="194" addr="b7724298" />
            </attributelist >
         
        </insert >
    </include >
    <include id="195" addr="b7723248" >
        <attributelist id="196" addr="b7723248" >
            <attribute name="name" value="interfaces/libvlc_media_discoverer.i" id="197" addr="b7724298" />
            <attribute name="module" value="" id="198" addr="b7723298" />
            <attribute name="options" value="b77231f8" id="199" addr="b77231f8" />
        </attributelist >

        <module id="200" addr="b7723268" >
            <attributelist id="201" addr="b7723268" >
                <attribute name="name" value="vlc" id="202" addr="b7724298" />
            </attributelist >
         
        </module >
        <insert id="203" addr="b77232b8" >
            <attributelist id="204" addr="b77232b8" >
                <attribute name="code" value="&#10;module VLC&#10;	module Media&#10;		module Discoverer&#10;  		extend FFI::Library&#10;  		ffi_lib &quot;libvlc&quot;&#10;" id="205" addr="b7724298" />
            </attributelist >
         
        </insert >
        <include id="206" addr="b77232f8" >
            <attributelist id="207" addr="b77232f8" >
                <attribute name="name" value="interfaces/libvlc_api.h" id="208" addr="b7724298" />
            </attributelist >
         
        </include >
        <include id="209" addr="b7723348" >
            <attributelist id="210" addr="b7723348" >
                <attribute name="name" value="/usr/include/vlc/libvlc_media_discoverer.h" id="211" addr="b7724298" />
            </attributelist >

            <constant id="212" addr="b7723388" >
                <attributelist id="213" addr="b7723388" >
                    <attribute name="sym_name" value="VLC_LIBVLC_MEDIA_DISCOVERER_H" id="214" addr="b7724298" />
                    <attribute name="name" value="VLC_LIBVLC_MEDIA_DISCOVERER_H" id="215" addr="b7724298" />
                    <attribute name="feature_immutable" value="1" id="216" addr="b7724298" />
                    <attribute name="value" value="1" id="217" addr="b7724298" />
                    <attribute name="storage" value="%constant" id="218" addr="b7724298" />
                    <attribute name="type" value="int" id="219" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="220" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="221" addr="b7724298" />
                </attributelist >
             
            </constant >
            <cdecl id="222" addr="b77234e8" >
                <attributelist id="223" addr="b77234e8" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_t" id="224" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_t" id="225" addr="b7724298" />
                    <attribute name="decl" value="" id="226" addr="b7724298" />
                    <attribute name="storage" value="typedef" id="227" addr="b7724298" />
                    <attribute name="kind" value="typedef" id="228" addr="b7724298" />
                    <attribute name="type" value="struct libvlc_media_discoverer_t" id="229" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="230" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="231" addr="b7724298" />
                </attributelist >
             
            </cdecl >
            <cdecl id="232" addr="b7723718" >
                <attributelist id="233" addr="b7723718" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_new_from_name" id="234" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_new_from_name" id="235" addr="b7724298" />
                    <attribute name="decl" value="f(p.libvlc_instance_t,p.q(const).char).p." id="236" addr="b7724298" />
                    <parmlist id="237" addr="b7723638" >
                        <parm id="238">
                            <attributelist id="239" addr="b7723638" >
                                <attribute name="name" value="p_inst" id="240" addr="b7724298" />
                                <attribute name="type" value="p.libvlc_instance_t" id="241" addr="b7724298" />
                                <attribute name="compactdefargs" value="1" id="242" addr="b7724298" />
                            </attributelist >
                        </parm >
                        <parm id="243">
                            <attributelist id="244" addr="b77236d8" >
                                <attribute name="name" value="psz_name" id="245" addr="b7724298" />
                                <attribute name="type" value="p.q(const).char" id="246" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                    <attribute name="kind" value="function" id="247" addr="b7724298" />
                    <attribute name="type" value="libvlc_media_discoverer_t" id="248" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="249" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="250" addr="b7724298" />
                </attributelist >
             
            </cdecl >
            <cdecl id="251" addr="b7723868" >
                <attributelist id="252" addr="b7723868" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_release" id="253" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_release" id="254" addr="b7724298" />
                    <attribute name="decl" value="f(p.libvlc_media_discoverer_t)." id="255" addr="b7724298" />
                    <parmlist id="256" addr="b7723818" >
                        <parm id="257">
                            <attributelist id="258" addr="b7723818" >
                                <attribute name="name" value="p_mdis" id="259" addr="b7724298" />
                                <attribute name="type" value="p.libvlc_media_discoverer_t" id="260" addr="b7724298" />
                                <attribute name="compactdefargs" value="1" id="261" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                    <attribute name="kind" value="function" id="262" addr="b7724298" />
                    <attribute name="type" value="void" id="263" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="264" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="265" addr="b7724298" />
                </attributelist >
             
            </cdecl >
            <cdecl id="266" addr="b77239b8" >
                <attributelist id="267" addr="b77239b8" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_localized_name" id="268" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_localized_name" id="269" addr="b7724298" />
                    <attribute name="decl" value="f(p.libvlc_media_discoverer_t).p." id="270" addr="b7724298" />
                    <parmlist id="271" addr="b7723978" >
                        <parm id="272">
                            <attributelist id="273" addr="b7723978" >
                                <attribute name="name" value="p_mdis" id="274" addr="b7724298" />
                                <attribute name="type" value="p.libvlc_media_discoverer_t" id="275" addr="b7724298" />
                                <attribute name="compactdefargs" value="1" id="276" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                    <attribute name="kind" value="function" id="277" addr="b7724298" />
                    <attribute name="type" value="char" id="278" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="279" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="280" addr="b7724298" />
                </attributelist >
             
            </cdecl >
            <cdecl id="281" addr="b7723b08" >
                <attributelist id="282" addr="b7723b08" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_media_list" id="283" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_media_list" id="284" addr="b7724298" />
                    <attribute name="decl" value="f(p.libvlc_media_discoverer_t).p." id="285" addr="b7724298" />
                    <parmlist id="286" addr="b7723ac8" >
                        <parm id="287">
                            <attributelist id="288" addr="b7723ac8" >
                                <attribute name="name" value="p_mdis" id="289" addr="b7724298" />
                                <attribute name="type" value="p.libvlc_media_discoverer_t" id="290" addr="b7724298" />
                                <attribute name="compactdefargs" value="1" id="291" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                    <attribute name="kind" value="function" id="292" addr="b7724298" />
                    <attribute name="type" value="libvlc_media_list_t" id="293" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="294" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="295" addr="b7724298" />
                </attributelist >
             
            </cdecl >
            <cdecl id="296" addr="b7723c58" >
                <attributelist id="297" addr="b7723c58" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_event_manager" id="298" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_event_manager" id="299" addr="b7724298" />
                    <attribute name="decl" value="f(p.libvlc_media_discoverer_t).p." id="300" addr="b7724298" />
                    <parmlist id="301" addr="b7723c18" >
                        <parm id="302">
                            <attributelist id="303" addr="b7723c18" >
                                <attribute name="name" value="p_mdis" id="304" addr="b7724298" />
                                <attribute name="type" value="p.libvlc_media_discoverer_t" id="305" addr="b7724298" />
                                <attribute name="compactdefargs" value="1" id="306" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                    <attribute name="kind" value="function" id="307" addr="b7724298" />
                    <attribute name="type" value="libvlc_event_manager_t" id="308" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="309" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="310" addr="b7724298" />
                </attributelist >
             
            </cdecl >
            <cdecl id="311" addr="b7723da8" >
                <attributelist id="312" addr="b7723da8" >
                    <attribute name="sym_name" value="libvlc_media_discoverer_is_running" id="313" addr="b7724298" />
                    <attribute name="name" value="libvlc_media_discoverer_is_running" id="314" addr="b7724298" />
                    <attribute name="decl" value="f(p.libvlc_media_discoverer_t)." id="315" addr="b7724298" />
                    <parmlist id="316" addr="b7723d58" >
                        <parm id="317">
                            <attributelist id="318" addr="b7723d58" >
                                <attribute name="name" value="p_mdis" id="319" addr="b7724298" />
                                <attribute name="type" value="p.libvlc_media_discoverer_t" id="320" addr="b7724298" />
                                <attribute name="compactdefargs" value="1" id="321" addr="b7724298" />
                            </attributelist >
                        </parm >
                    </parmlist >
                    <attribute name="kind" value="function" id="322" addr="b7724298" />
                    <attribute name="type" value="int" id="323" addr="b7724298" />
                    <attribute name="sym_symtab" value="b771a3d8" id="324" addr="b771a3d8" />
                    <attribute name="sym_overname" value="__SWIG_0" id="325" addr="b7724298" />
                </attributelist >
             
            </cdecl >
        </include >
        <insert id="326" addr="b7723e38" >
            <attributelist id="327" addr="b7723e38" >
                <attribute name="code" value="&#10;		end&#10;	end&#10;end&#10;" id="328" addr="b7724298" />
            </attributelist >
         
        </insert >
    </include >
</top >
